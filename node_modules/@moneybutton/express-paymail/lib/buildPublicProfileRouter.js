"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildPublicProfileRouter = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _express = _interopRequireDefault(require("express"));

var _expressAsyncHandler = _interopRequireDefault(require("express-async-handler"));

var _PaymailError = require("./errors/PaymailError");

var _httpStatusCodes = _interopRequireDefault(require("http-status-codes"));

var buildPublicProfileRouter = function buildPublicProfileRouter(config, ifPresent) {
  if (config.publicProfile) {
    var router = _express["default"].Router();

    router.get('/public-profile/:paymail', (0, _expressAsyncHandler["default"])(
    /*#__PURE__*/
    function () {
      var _ref = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(req, res) {
        var _req$params$paymail$s, _req$params$paymail$s2, name, domain, size, obj;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _req$params$paymail$s = req.params.paymail.split('@'), _req$params$paymail$s2 = (0, _slicedToArray2["default"])(_req$params$paymail$s, 2), name = _req$params$paymail$s2[0], domain = _req$params$paymail$s2[1];
                size = isNaN(Number(req.query.s)) ? null : Number(req.query.s);
                _context.next = 4;
                return config.publicProfile(name, domain, size);

              case 4:
                obj = _context.sent;

                if (obj) {
                  _context.next = 7;
                  break;
                }

                throw new _PaymailError.PaymailError("Paymail not found: ".concat(req.params.paymail, "."), _httpStatusCodes["default"].NOT_FOUND, 'not-found');

              case 7:
                res.send({
                  name: obj.name,
                  avatar: obj.avatar
                });

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }()));
    ifPresent(router);
  }
};

exports.buildPublicProfileRouter = buildPublicProfileRouter;