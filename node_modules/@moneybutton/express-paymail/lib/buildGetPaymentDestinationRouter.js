"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildGetPaymentDestinationRouter = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _express = _interopRequireDefault(require("express"));

var _expressAsyncHandler = _interopRequireDefault(require("express-async-handler"));

var _PaymailError = require("./errors/PaymailError");

var _httpStatusCodes = _interopRequireDefault(require("http-status-codes"));

var helpers = _interopRequireWildcard(require("./script-helpers"));

var _paymailClient = require("@moneybutton/paymail-client");

var HANDLE_VALIDATION_REGEX = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;

var validateSignature =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(paymailClient, params) {
    var message;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            message = _paymailClient.VerifiableMessage.forBasicAddressResolution({
              senderHandle: params.senderHandle,
              dt: params.dt,
              amount: params.amount,
              purpose: params.purpose
            });
            _context.next = 3;
            return paymailClient.isValidSignature(message, params.signature, params.senderHandle, params.pubkey);

          case 3:
            if (_context.sent) {
              _context.next = 5;
              break;
            }

            throw new _PaymailError.PaymailError('Wrong signature', _httpStatusCodes["default"].BAD_REQUEST, 'bad-signature');

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function validateSignature(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var validateRequest =
/*#__PURE__*/
function () {
  var _ref2 = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2(params, paymailClient, checkSignature) {
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (params.senderHandle) {
              _context2.next = 2;
              break;
            }

            throw new _PaymailError.PaymailError('Missing sender handle', _httpStatusCodes["default"].BAD_REQUEST, 'missing-sender-handle');

          case 2:
            if (HANDLE_VALIDATION_REGEX.test(params.senderHandle)) {
              _context2.next = 4;
              break;
            }

            throw new _PaymailError.PaymailError('Invalid sender handle', _httpStatusCodes["default"].BAD_REQUEST, 'invalid-sender-handle');

          case 4:
            if (params.dt) {
              _context2.next = 6;
              break;
            }

            throw new _PaymailError.PaymailError('Missing parameter dt', _httpStatusCodes["default"].BAD_REQUEST, 'missing-dt');

          case 6:
            if (!checkSignature) {
              _context2.next = 11;
              break;
            }

            if (params.signature) {
              _context2.next = 9;
              break;
            }

            throw new _PaymailError.PaymailError('Missing signature', _httpStatusCodes["default"].BAD_REQUEST, 'missing-signature');

          case 9:
            _context2.next = 11;
            return validateSignature(paymailClient, params);

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function validateRequest(_x3, _x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();

var checkContentType = function checkContentType(req, res, next) {
  if (!req.is('application/json')) {
    throw new _PaymailError.PaymailError('Wrong content type. It should be `application/json`', _httpStatusCodes["default"].BAD_REQUEST, 'wrong-content-type');
  }

  next();
};

var buildGetPaymentDestinationRouter = function buildGetPaymentDestinationRouter(config, ifPresent) {
  if (config.getPaymentDestination) {
    var router = _express["default"].Router();

    router.post('/address/:paymail', checkContentType, (0, _expressAsyncHandler["default"])(
    /*#__PURE__*/
    function () {
      var _ref3 = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3(req, res) {
        var _req$params$paymail$s, _req$params$paymail$s2, name, domain, validateSignature, output;

        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _req$params$paymail$s = req.params.paymail.split('@'), _req$params$paymail$s2 = (0, _slicedToArray2["default"])(_req$params$paymail$s, 2), name = _req$params$paymail$s2[0], domain = _req$params$paymail$s2[1];
                validateSignature = config.requestSenderValidation;
                _context3.next = 4;
                return validateRequest(req.body, config.paymailClient, validateSignature);

              case 4:
                _context3.next = 6;
                return config.getPaymentDestination(name, domain, req.body, helpers);

              case 6:
                output = _context3.sent;

                if (output) {
                  _context3.next = 9;
                  break;
                }

                throw new _PaymailError.PaymailError("Paymail not found: ".concat(req.params.paymail), _httpStatusCodes["default"].NOT_FOUND, 'not-found');

              case 9:
                res.send({
                  output: output
                });

              case 10:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      return function (_x6, _x7) {
        return _ref3.apply(this, arguments);
      };
    }()));
    ifPresent(router);
  }
};

exports.buildGetPaymentDestinationRouter = buildGetPaymentDestinationRouter;